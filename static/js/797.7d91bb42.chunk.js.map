{"version":3,"file":"static/js/797.7d91bb42.chunk.js","mappings":"4LAEaA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACxB,wBACGD,EAAOE,KAAI,SAAAC,GACV,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAXqB,C,oICsE1B,UAlEmB,WACjB,OAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOT,EAAP,KAAee,EAAf,KACMd,GAAWe,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,EAAaK,IAAI,UAGtB,mCAAC,8GAE0BC,EAAAA,EAAAA,IAAoBN,GAF9C,OAESO,EAFT,OAGGL,EAAUK,GACLA,EAASC,QACZC,EAAAA,GAAAA,KAAW,uCAAwC,CACjDC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAbd,gDAiBGC,QAAQC,MAAR,MAjBH,yDAAD,sDAoBD,GAAE,CAACpB,IAyBJ,OACE,iCACE,kBAAMqB,SArBU,SAAAC,GAClBA,EAAEC,iBACF,IAAMC,EAAe3B,EAAM4B,OAC3B,IAAKD,EACH,OAAOf,EAAAA,GAAAA,KAAW,mCAAoC,CACpDC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAGXjB,EAAgB,CAAEJ,MAAO2B,IACzB1B,EAAS,GACV,EAIG,WACE,kBAAO4B,KAAK,OAAOC,MAAO9B,EAAO+B,SA1BnB,SAAAN,GAClBxB,EAASwB,EAAEO,cAAcF,MAC1B,KAyBK,mBAAQD,KAAK,SAAb,uBAEDvC,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAQC,SAAUA,MAGtD,C","sources":["components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ movies, location }) => (\n  <ol>\n    {movies.map(movie => {\n      const { id, title } = movie;\n      return (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      );\n    })}\n  </ol>\n);\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMoviesByQuery } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { toast } from 'react-toastify';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    (async function fetchMovies() {\n      try {\n        const response = await searchMoviesByQuery(searchParams);\n        setMovies(response);\n        if (!response.length) {\n          toast.warn('There are no movies for your request', {\n            position: 'top-right',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'light',\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [searchParams]);\n\n  const handlChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handlSubmit = e => {\n    e.preventDefault();\n    const currentQuery = query.trim();\n    if (!currentQuery) {\n      return toast.warn('Please, enter something to find!', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'light',\n      });\n    }\n    setSearchParams({ query: currentQuery });\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handlSubmit}>\n        <input type=\"text\" value={query} onChange={handlChange}></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && <MoviesList movies={movies} location={location} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["MoviesList","movies","location","map","movie","id","title","to","state","from","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMovies","useLocation","useEffect","get","searchMoviesByQuery","response","length","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","console","error","onSubmit","e","preventDefault","currentQuery","trim","type","value","onChange","currentTarget"],"sourceRoot":""}