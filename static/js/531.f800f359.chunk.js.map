{"version":3,"file":"static/js/531.f800f359.chunk.js","mappings":"qRAEaA,EAAmBC,EAAAA,GAAAA,QAAH,0CAIhBC,EAAiBD,EAAAA,GAAAA,IAAH,2D,SC0E3B,EArE0B,WAAO,IAAD,IACtBE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,QAAQC,IAAIV,IAEZW,EAAAA,EAAAA,YAAU,YACR,mCAAC,8GAEsBC,EAAAA,EAAAA,IAAiBZ,GAFvC,OAESa,EAFT,OAGGT,EAASS,GAHZ,gDAKGR,EAAS,KALZ,yDAAD,sDAQD,GAAE,CAACL,EAASK,KAMX,iCACE,mBAAQS,KAAK,SAASC,QAL1B,WAAmB,IAAD,IAChBV,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUS,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAGG,qBAGCd,IACC,UAACN,EAAD,YACE,SAACE,EAAD,CACEmB,IAAG,6CAAwCf,EAAMgB,aACjDC,IAAKjB,EAAMkB,SAEb,4BACE,wBAAKlB,EAAMkB,SACX,wCAAgBlB,EAAMmB,iBACtB,sCACA,uBAAInB,EAAMoB,YACV,oCACA,wBACGpB,EAAMqB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALD,EADO,aAO1B,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAME,GAAG,OAAOZ,MAAO,CAAEC,KAAI,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,MAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMW,GAAG,UAAUZ,MAAO,CAAEC,KAAI,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,MAAnD,8BAMN,mBACA,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCardSection = styled.section`\n  display: flex;\n`;\n\nexport const MovieCardImage = styled.img`\n  width: 500px;\n  height: 600px;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getDetailsOfFilm } from 'services/api';\nimport { MovieCardSection, MovieCardImage } from './MovieDetailsPage.styled';\n\nconst MoviesDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  console.log(movieId);\n\n  useEffect(() => {\n    (async function detailsFilm() {\n      try {\n        const data = await getDetailsOfFilm(movieId);\n        setMovie(data);\n      } catch (error) {\n        navigate('/');\n      }\n    })();\n  }, [movieId, navigate]);\n\n  function goBack() {\n    navigate(location?.state?.from ?? '/');\n  }\n  return (\n    <>\n      <button type=\"button\" onClick={goBack}>\n        Go back\n      </button>\n      {movie && (\n        <MovieCardSection>\n          <MovieCardImage\n            src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User score: {movie.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {movie.genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </div>\n        </MovieCardSection>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location?.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <hr />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["MovieCardSection","styled","MovieCardImage","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","console","log","useEffect","getDetailsOfFilm","data","type","onClick","state","from","src","poster_path","alt","title","vote_average","overview","genres","map","id","name","to"],"sourceRoot":""}